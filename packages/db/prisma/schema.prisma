generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String      @id @default(uuid())
  email             String?  @unique
  name              String? 
  number            String  @unique
  password          String
  onRampTransaction OnRampTransaction[]
  Balance           Balance[]
  sentTransfers     P2P[]        @relation(name: "fromUserRelation")
  receivedTransfers P2P[]        @relation(name: "toUserRelation")
}

model Merchant {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  name        String?
  auth_type   AuthType   
}

model P2P {
  id          String         @id @default(uuid())
  amount      Int 
  timestamp   DateTime
  fromUserId  String
  fromUser    User           @relation(name: "fromUserRelation", fields: [fromUserId], references: [id])    
  toUserId    String
  toUser      User           @relation(name: "toUserRelation", fields: [toUserId], references: [id])    
}

model Balance {
  id        String    @id @default(uuid())
  userId    String    @unique
  amount    Int       @default(0)
  user      User      @relation(fields: [userId], references: [id])
}

model OnRampTransaction {
  id        String        @id @default(uuid())
  status    OnRampStatus  
  token     String        @unique
  provider  String
  amount    Int
  startTime DateTime
  userId    String
  user      User          @relation(fields: [userId], references: [id])
}

enum AuthType {
  Google
  Github
}

enum OnRampStatus {
  Success
  Failure
  Processing
}